[tool.poetry]
name = "telescope-python"
version = "1.0.5"
description = "Python client for Telescope error monitoring"
authors = ["Telescope Team <hello@ultron.studio>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/us-telescope/telescope-python"
repository = "https://github.com/us-telescope/telescope-python"
documentation = "https://github.com/us-telescope/telescope-python#readme"
keywords = ["telescope", "error-monitoring", "observability", "opentelemetry", "logging"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Logging",
]
packages = [{include = "telescope"}]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.25.0"
opentelemetry-api = "^1.20.0"
opentelemetry-sdk = "^1.20.0"
opentelemetry-exporter-otlp = "^1.20.0"
opentelemetry-instrumentation-requests = "^0.41b0"
opentelemetry-instrumentation-logging = "^0.41b0"

# Optional dependencies for framework integrations
opentelemetry-instrumentation-django = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-psycopg2 = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-flask = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-fastapi = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-sqlalchemy = {version = "^0.41b0", optional = true}
opentelemetry-instrumentation-celery = {version = "^0.41b0", optional = true}

[tool.poetry.extras]
django = [
    "opentelemetry-instrumentation-django",
    "opentelemetry-instrumentation-psycopg2"
]
flask = [
    "opentelemetry-instrumentation-flask",
    "opentelemetry-instrumentation-sqlalchemy"
]
fastapi = [
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-sqlalchemy"
]
celery = ["opentelemetry-instrumentation-celery"]
all = [
    "opentelemetry-instrumentation-django",
    "opentelemetry-instrumentation-psycopg2",
    "opentelemetry-instrumentation-flask",
    "opentelemetry-instrumentation-fastapi",
    "opentelemetry-instrumentation-sqlalchemy",
    "opentelemetry-instrumentation-celery"
]

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^22.0.0"
flake8 = "^5.0.0"
mypy = "^1.0.0"
ruff = "^0.1.0"

[tool.poetry.scripts]
telescope-test = "telescope.cli:test_connection"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
